Recursive Composition Chain To Win Back Reformâ€™s Funds: l.o-a,1.7 recursively, compose for the analyzer to solve next, 
keep 50%<copyright>exactly elements from the previous position. 

Built in error checker that feeds back if the next-comp is invalid, and how to fix # 

A composition history and tree; with a post_2_proc that checks for incidental mergers, and map these.

Track points for contributors: points get doubled, if one of your contributions is merged down the line. Build in Flareons<ch-13>

Return to any previous point in the tree, and fork. Use 1.1-2-4 etc system, dash style, with no theoretical limit of children per 
line, point, or generation, but all compositions have to be valid. Points extra, for having a lot of descendants, from a point, 
down your line. Keep a total users scoreboard. Make this l.o-a,8<ult.gap-gran,bridge.fbno>

X.ref-chess-website.txt in dash.chess-main # 

+Hive dump this to build l.o-a,2.7$ _ Top simp returners are highly ranked in subsequent financial stakes. 

Financial stakes layer to l.o-a,8: The Democracy Layer, investment. 

This_2_proc<dash>should also check for duplicates, and block any 100% duplication, under any terms, for this project only # 

Chess-analyzer, can send requests for computation, and add additional analysis to positions<ch.62-tech,curation>and, for instance, 
identify additional tact-categories of positions composed for a main # 

L.o-a,10: Social graph, top scores among friends, close friends etc 

Loa-11: Marketing, influence<ch-62>

Loa-12: Education Loa-13: Law Loa-14 Theology, fin-this$